inherit_from: .rubocop_todo.yml

require:
  - rubocop-rails
  - rubocop-rspec

AllCops:
  Exclude:
    - config.ru
    - Gemfile
    - Guardfile
    - Rakefile
    - bin/*
    - db/schema.rb
    - db/migrate/*
    - lib/rails/**/*
    - lib/templates/**/*
    - lib/tasks/cucumber.rake
  NewCops: enable
  TargetRubyVersion: 3.2

# Configuration parameters: CountComments.
Metrics/BlockLength:
  Exclude:
    - config/routes.rb
    - factories/**/*
    - lib/tasks/**/*
    - spec/**/*

# Most readable form.
Layout/HashAlignment:
  EnforcedHashRocketStyle: table
  EnforcedColonStyle: table

# Configuration parameters: AllowForAlignment, ForceEqualSignAlignment.
Layout/ExtraSpacing:
  Exclude:
    - bin/setup
    - db/schema.rb

Lint/ParenthesesAsGroupedExpression:
  Exclude:
    - config/puma.rb

# Commonly used screens these days easily fit more than 80 characters.
Layout/LineLength:
  Max: 120

# Too short methods lead to extraction of single-use methods, which can make
# the code easier to read (by naming things), but can also clutter the class
Metrics/MethodLength:
  Max: 25

# The guiding principle of classes is SRP, SRP can't be accurately measured by LoC
Metrics/ClassLength:
  Max: 1500

Rails:
  Enabled: true

Rails/InverseOf:
  Enabled: false

# Configuration parameters: Blacklist.
# Blacklist: decrement!, decrement_counter, increment!, increment_counter, toggle!, touch, update_all, update_attribute, update_column, update_columns, update_counters
Rails/SkipsModelValidations:
  Exclude:
    - 'spec/**/*'

Style/StringLiterals:
  EnforcedStyle: single_quotes

# We do not need to support Ruby 1.9, so this is good to use.
Style/SymbolArray:
  Enabled: true

# Mixing the styles looks just silly.
Style/HashSyntax:
  EnforcedStyle: ruby19_no_mixed_keys

# # String#% is by far the least verbose and only object oriented variant.
# Style/FormatString:
#   EnforcedStyle: percent

# Either allow this style or don't. Marking it as safe with parenthesis
# is silly. Let's try to live without them for now.
Style/ParenthesesAroundCondition:
  AllowSafeAssignment: false
Lint/AssignmentInCondition:
  AllowSafeAssignment: false

# # Indenting the chained dots beneath each other is not supported by this cop,
# # see https://github.com/bbatsov/rubocop/issues/1633
# Style/MultilineOperationIndentation:
#   Enabled: false

# # Suppressing exceptions can be perfectly fine, and be it to avoid to
# # explicitly type nil into the rescue since that's what you want to return,
# # or suppressing LoadError for optional dependencies
# Lint/HandleExceptions:
#   Enabled: false

# { ... } for multi-line blocks is okay, follow Weirichs rule instead:
# https://web.archive.org/web/20140221124509/http://onestepback.org/index.cgi/Tech/Ruby/BraceVsDoEnd.rdoc
# Style/BlockDelimiters:
#   Enabled: false

# do / end blocks should be used for side effects,
# methods that run a block for side effects and have
# a useful return value are rare, assign the return
# value to a local variable for those cases.
# Style/MethodCalledOnDoEndBlock:
#   Enabled: true

# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: nested, compact
Style/ClassAndModuleChildren:
  EnforcedStyle: nested

Style/CollectionMethods:
  Enabled: true
  # PreferredMethods:
  #   # inject seems more common in the community.
  #   reduce: "inject"

# Check with yard instead.
Style/Documentation:
  Enabled: false

# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: when_needed, always
Style/FrozenStringLiteralComment:
  Enabled: false

# Configuration parameters: AllowedVariables.
Style/GlobalVars:
  AllowedVariables:
    - $redis

# There are valid cases, for example debugging Cucumber steps,
# also they'll fail CI anyway
# Lint/Debugger:
#   Enabled: false

# Style preference
Style/MethodDefParentheses:
  Enabled: true

# A specialized exception class will take one or more arguments and construct the message from it.
# So both variants make sense.
Style/RaiseArgs:
  Enabled: false

# Configuration parameters: EnforcedStyle, SupportedStyles, AllowInnerSlashes.
# SupportedStyles: slashes, percent_r, mixed
Style/RegexpLiteral:
  Exclude:
    - Guardfile

# Fail is an alias of raise. Avoid aliases, it's more cognitive load for no gain.
# The argument that fail should be used to abort the program is wrong too,
# there's Kernel#abort for that.
Style/SignalException:
  EnforcedStyle: only_raise

Style/SymbolProc:
  Exclude:
    - factories/*
